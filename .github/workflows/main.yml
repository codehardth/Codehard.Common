name: Merge to main

on:
  push:
    branches: [ main ]

jobs:
  publish-functional:
    runs-on: ubuntu-latest
    env:
      working-directory: ./src/Codehard.Functional

    steps:
    - name: Publish Codehard.Functional To Nuget
      working-directory: ${{env.working-directory}}
      uses: brandedoutcast/publish-nuget@v2.5.2
      with:
          PROJECT_FILE_PATH: Codehard.Functional/Codehard.Functional.csproj
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
    - name: Publish Codehard.Functional.AspNetCore To Nuget
      working-directory: ${{env.working-directory}}
      uses: brandedoutcast/publish-nuget@v2.5.2
      with:
          PROJECT_FILE_PATH: Codehard.Functional.AspNetCore/Codehard.Functional.AspNetCore.csproj
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
    - name: Publish Codehard.Functional.Logger To Nuget
      working-directory: ${{env.working-directory}}
      uses: brandedoutcast/publish-nuget@v2.5.2
      with:
        PROJECT_FILE_PATH: Codehard.Functional.Logger/Codehard.Functional.Logger.csproj
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}
    - name: Publish Codehard.Functional.MassTransit To Nuget
      working-directory: ${{env.working-directory}}
      uses: brandedoutcast/publish-nuget@v2.5.2
      with:
        PROJECT_FILE_PATH: Codehard.Functional.MassTransit/Codehard.Functional.MassTransit.csproj
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}
    - name: Publish Codehard.Functional.FSharp To Nuget
      working-directory: ${{env.working-directory}}
      uses: brandedoutcast/publish-nuget@v2.5.2
      with:
        PROJECT_FILE_PATH: Codehard.Functional.FSharp/Codehard.Functional.FSharp.csproj
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}