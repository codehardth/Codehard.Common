using System.Net;
using System.Text;
using Codehard.Functional.AspNetCore.Shared;

namespace Codehard.Functional.AspNetCore.Sources;

internal static class ValidationSource
{
    public static string FileName = "ValidationExtensions.g.cs";

    public static string Generate()
    {
        var type = typeof(HttpStatusCode);

        var statusCodes =
            Enum.GetValues(type)
                .Cast<HttpStatusCode>()
                .Distinct()
                .Select(s => Enum.GetName(type, s))
                .ToArray();

        var sb = new StringBuilder();

        sb.AppendLine("// <auto-generated />");
        sb.AppendLine("using LanguageExt;");
        sb.AppendLine("using LanguageExt.Common;");
        sb.AppendLine();
        sb.AppendLine($"namespace {Constants.Namespace};");
        sb.AppendLine();
        sb.AppendLine("public static class ValidationExtensions");
        sb.Append("{");

        foreach (var status in statusCodes)
        {
            sb.AppendLine();
            sb.AppendLine(
                $"    public static Aff<A> ToAffWithFailTo{status}<A>(this Validation<Error, A> ma, int errorCode, string errorMessage = \"\")");
            sb.AppendLine(
                $"        => ma.ToAff(se => se.Flatten(errorCode)).MapFailTo{status}(_ => errorMessage);");
        }

        sb.AppendLine("}");

        return sb.ToString();
    }
}